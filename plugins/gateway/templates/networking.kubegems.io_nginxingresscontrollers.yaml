---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: nginxingresscontrollers.networking.kubegems.io
spec:
  group: networking.kubegems.io
  names:
    kind: NginxIngressController
    listKind: NginxIngressControllerList
    plural: nginxingresscontrollers
    singular: nginxingresscontroller
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: NginxIngressController is the Schema for the nginxingresscontrollers
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NginxIngressControllerSpec defines the desired state of NginxIngressController
            properties:
              configMapData:
                additionalProperties:
                  type: string
                description: |-
                  Initial values of the Ingress Controller ConfigMap.
                  Check https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/ for
                  more information about possible values.
                nullable: true
                type: object
              image:
                description: The image of the Ingress Controller.
                properties:
                  pullPolicy:
                    description: The ImagePullPolicy of the image.
                    type: string
                  repository:
                    description: The repository of the image.
                    type: string
                  tag:
                    description: The tag (version) of the image.
                    type: string
                type: object
              ingressClass:
                description: A class of the Ingress controller. The Ingress controller
                  only processes Ingress resources that belong to its class.
                type: string
              replicas:
                description: The number of replicas of the Ingress Controller pod.
                  The default is 1. Only applies if the type is set to deployment.
                format: int32
                nullable: true
                type: integer
              service:
                description: The service of the Ingress controller.
                nullable: true
                properties:
                  extraAnnotations:
                    additionalProperties:
                      type: string
                    description: Specifies extra annotations of the service.
                    nullable: true
                    type: object
                  extraLabels:
                    additionalProperties:
                      type: string
                    description: Specifies extra labels of the service.
                    nullable: true
                    type: object
                  ports:
                    description: Ports of the Service.
                    items:
                      description: ServicePort contains information on service's port.
                      properties:
                        appProtocol:
                          description: |-
                            The application protocol for this port.
                            This field follows standard Kubernetes label syntax.
                            Un-prefixed names are reserved for IANA standard service names (as per
                            RFC-6335 and http://www.iana.org/assignments/service-names).
                            Non-standard protocols should use prefixed names such as
                            mycompany.com/my-custom-protocol.
                          type: string
                        name:
                          description: |-
                            The name of this port within the service. This must be a DNS_LABEL.
                            All ports within a ServiceSpec must have unique names. When considering
                            the endpoints for a Service, this must match the 'name' field in the
                            EndpointPort.
                            Optional if only one ServicePort is defined on this service.
                          type: string
                        nodePort:
                          description: |-
                            The port on each node on which this service is exposed when type is
                            NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                            specified, in-range, and not in use it will be used, otherwise the
                            operation will fail.  If not specified, a port will be allocated if this
                            Service requires one.  If this field is specified when creating a
                            Service which does not need it, creation will fail. This field will be
                            wiped when updating a Service to no longer need it (e.g. changing type
                            from NodePort to ClusterIP).
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                          format: int32
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: |-
                            The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                            Default is TCP.
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: |-
                            Number or name of the port to access on the pods targeted by the service.
                            Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                            If this is a string, it will be looked up as a named port in the
                            target Pod's container ports. If this is not specified, the value
                            of the 'port' field is used (an identity map).
                            This field is ignored for services with clusterIP=None, and should be
                            omitted or set equal to the 'port' field.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    type: array
                  type:
                    description: 'The type of the Service for the Ingress Controller.
                      Valid Service types are: NodePort and LoadBalancer.'
                    type: string
                type: object
              watchNamespace:
                description: Namespace to watch for Ingress resources. By default
                  the Ingress controller watches all namespaces.
                type: string
              workload:
                description: The Workload of the Ingress controller.
                nullable: true
                properties:
                  extraLabels:
                    additionalProperties:
                      type: string
                    description: Specifies extra labels of the workload(deployment
                      or daemonset) of nginx.
                    nullable: true
                    type: object
                  resources:
                    description: Specifies resource request and limit of the nginx
                      container
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: NginxIngressControllerStatus defines the observed state of
              NginxIngressController
            properties:
              deployed:
                description: Deployed is true if the Operator has finished the deployment
                  of the NginxIngressController.
                type: boolean
            required:
            - deployed
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
